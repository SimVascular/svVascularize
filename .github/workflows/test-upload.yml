name: Build & Publish to TestPyPI

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Upload to PyPi-Test?"
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  build_wheels:
    # We'll build on a matrix of OSes and Python versions.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.12.0
          # You can also install other build deps here if needed:
          # pip install cmake ninja scikit-build etc.

      - name: Build wheels
        # cibuildwheel will handle building wheels for the current platform (Linux or macOS).
        # By default, it places them in the `wheelhouse/` directory.
        run: cibuildwheel --output-dir dist
        env:
          CIBW_SKIP: pp*

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist --outdir dist

      - name: Upload built wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist

  publish_testpypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.upload == 'true' }}
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Install Twine
        run: python -m pip install --upgrade pip twine

      - name: Upload wheels to TestPyPI
        run: |
          python -m twine upload --repository testpypi dist/*.whl dist/*.tar.gz
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
